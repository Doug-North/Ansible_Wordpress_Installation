---
#- name: Download WordPress 
#  get_url: 
#    url=https://wordpress.org/latest.tar.gz 
#    dest=/tmp/wordpress.tar.gz
#    validate_certs=no 
#  sudo: yes

#- name: Extract WordPress 
#  unarchive: src=/tmp/wordpress.tar.gz dest=/var/www/ copy=no 
#  sudo: yes

#- name: Update default Apache site
#  sudo: yes
#  lineinfile: 
#    dest=/etc/apache2/sites-enabled/000-default.conf 
#    regexp="(.)+DocumentRoot /var/www/html"
#    line="DocumentRoot /var/www/wordpress"
#  notify:
#    - restart apache
#  sudo: yes

#- name: Copy sample config file
#  command: mv /var/www/wordpress/wp-config-sample.php /var/www/wordpress/wp-config.php creates=/var/www/wordpress/wp-config.php
#  sudo: yes

#- name: Update WordPress config file
#  lineinfile:
#    dest=/var/www/wordpress/wp-config.php
#    regexp="{{ item.regexp }}"
#    line="{{ item.line }}"
#  with_items:
#    - {'regexp': "define\\('DB_NAME', '(.)+'\\);", 'line': "define('DB_NAME', '{{wp_mysql_db}}');"}        
#    - {'regexp': "define\\('DB_USER', '(.)+'\\);", 'line': "define('DB_USER', '{{wp_mysql_user}}');"}        
#    - {'regexp': "define\\('DB_PASSWORD', '(.)+'\\);", 'line': "define('DB_PASSWORD', '{{wp_mysql_password}}');"}
#  sudo: yes"

#- name: Add group "wordpress"
#  group: name=wordpress

#- name: Add user "wordpress"
#  user: name=wordpress group=wordpress home=/srv/wordpress/

#addition
- name: Create WordPress database
  mysql_db: name="{{ wordpress_db_name }}"
            state=present
            login_user=root
            login_password="{{ mysql_root_password }}"
#addition
- name: Create WordPress DB user and grant permissions to WordPress DB
  mysql_user: name="{{ wordpress_db_user }}"
              password="{{ wordpress_db_user_pass }}"
              priv="{{ wordpress_db_name }}.*:ALL"
             state=present
              login_user="root"
              login_password="{{ mysql_root_password }}"

- name: Fetch random salts for WordPress config
  local_action: command curl https://api.wordpress.org/secret-key/1.1/salt/
  register: "wp_salt"
  become: no
  become_method: sudo   

- name: Is WordPress downloaded?
  stat: path="{{ remote_wordpress_dir }}/index.php"
  register: wp_dir

- name: Create WordPress directory
  file: path="/var/www/wordpress"
        owner="{{ remote_deploy_user }}"
        group="{{ remote_deploy_group }}"
        mode=0755
        state=directory
  when: wp_dir.stat.isdir is not defined

- name: Change ownership of installation directory
  file: path="{{remote_www_dir}}" owner="{{ remote_deploy_user }}" group="{{ remote_deploy_group }}" mode=775 state=directory recurse=yes

- name: Download WordPress
  command: wp core download
  args:
      chdir: "{{ remote_wordpress_dir }}/"
  remote_user: "{{ remote_deploy_user }}"
  become: yes
  become_user: "{{ remote_deploy_user }}"
  become_method: su
  # when: wp_dir.stat.isdir is not defined

- name: Configure WordPress
  command: wp core config
           --path="{{ remote_wordpress_dir }}"
           --dbname="{{ wordpress_db_name }}"
           --dbuser="{{ wordpress_db_user }}"
           --dbpass="{{ wordpress_db_user_pass }}"
           --dbprefix="{{ wordpress_db_prefix }}"
  remote_user: "{{ remote_deploy_user }}"
  become: yes
  become_user: "{{ remote_deploy_user }}"
  become_method: su
  # when: wp_dir.stat.isdir is not defined

- name: Is WordPress installed?
  command: wp core is-installed
  args:
    chdir: "{{ remote_wordpress_dir }}/"
  register: wordpress_is_installed
  ignore_errors: True
  remote_user: "{{ remote_deploy_user }}"
  become: yes
  become_user: "{{ remote_deploy_user }}"
  become_method: su

- name: Update default Apache site
  #sudo: yes
  lineinfile:
    dest=/etc/apache2/sites-enabled/000-default.conf
    regexp="(.)+DocumentRoot /var/www/html"
    line="DocumentRoot /var/www/wordpress"
  notify:
    - restart apache
  sudo: yes

- name: Install WordPress tables
  command: wp core install
            --url="{{ wordpress_home_url }}"
            --title="{{ wordpress_site_title }}"
            --admin_user="{{ wordpress_admin_user }}"
            --admin_password="{{ wordpress_admin_user_pass }}"
            --admin_email="{{ wordpress_admin_email }}"
  args:
      chdir: "{{ remote_wordpress_dir }}/"
  when: wordpress_is_installed|failed
  remote_user: "{{ remote_deploy_user }}"
  become: yes
  become_user: "{{ remote_deploy_user }}"
  become_method: su

# tasks file for wordpress
